{"version":3,"sources":["LoginForm.js","SignUpForm.js","UserPage.js","App.js","index.js"],"names":["LoginForm","useState","password","setPassword","email","setEmail","e","a","preventDefault","axios","post","user","window","localStorage","setItem","data","token","location","reload","handleChange","target","name","value","onSubmit","type","onChange","SignUpForm","setUsername","hasAccount","setHasAccount","onClick","UserPage","disableTime","setDisableTime","description","setDescription","Date","getHours","startTime","setStartTime","Math","ceil","getMinutes","startTimeMinutes","setStartTimeMinutes","endTime","setEndTime","endTimeMinutes","setEndTimeMinutes","setUser","tasks","setTasks","AMorPM","setAMorPM","endAMorPM","setENDAMorPM","days","daysToFilter","setDaysToFilter","getDate","selectedDate","setSelectedDate","urgency","setUrgency","startTimeDev","setStartTimeDev","endTimeDev","setEndTimeDev","descriptionDev","setDescriptionDev","fetchTasks","get","headers","getItem","then","useEffect","currentUser","formattedDate","hour","minutes","day","getDay","today","fullYear","getFullYear","month","getMonth","createTask","dev","startTimeHour","endTimeHour","startTimeMin","endTimeMin","amOrPm","endAmOrPm","myDescription","slice","split","startTimeHr","startTimeMins","endTimeHr","endTimeMins","length","startTimeDate","toString","endTimeDate","deleteTask","taskId","delete","convertDate","date","newDate","hours","buttonValidator","fullStartTime","fullStartMinutes","fullEndTime","fullEndMinutes","currentDate","startTimeTaskDate","endTimeTaskDate","parse","getMonthString","toLocaleString","getCorrectDay","setDate","sortedTasks","sort","b","getTime","filter","task","myDate","year","dateToCompare","getMonthAndDay","Number","style","fontSize","textAlign","width","height","currentDay","nextDay","getMonthAndDay2","map","color","now","marginBottom","marginLeft","_id","fontWeight","Array","from","anotherDay","amountOfDays","keys","backgroundColor","disabled","marginTop","marginRight","App","isLoggedIn","setLoginStatus","removeItem","console","log","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fbee06e.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n\nfunction LoginForm() {    \n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    \n    \n    \n\n    async function handleSubmit(e){\n        e.preventDefault();\n        \n        const user = await axios.post(\"/api/users/login\", {email, password})\n        \n        window.localStorage.setItem('token', user.data.token);\n        window.location.reload();\n    }\n    \n    function handleChange(e){\n        if(e.target.name === 'email') {\n            setEmail(e.target.value);\n        }            \n        else if (e.target.name === 'password') {\n            setPassword(e.target.value);\n        }           \n    }\n\n    \n    return (<div>\n        Please Login :\n    <form onSubmit={handleSubmit}>\n        Email:\n            <input name=\"email\" type=\"text\" value={email} onChange={handleChange} />        \n        Password:\n            <input name=\"password\" type=\"password\" value={password} onChange={handleChange} />\n            <button type=\"submit\"> Enter </button>\n    </form>\n    \n    </div>)\n}\n\n\nexport default LoginForm","/* eslint-disable */\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport LoginForm from './LoginForm'\n\nfunction SignUpForm() {\n    const [name, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [hasAccount, setHasAccount] = useState(false);\n    \n    \n\n    async function handleSubmit(e){\n        e.preventDefault();\n        \n        const user = await axios.post(\"/api/users\", {name, email, password})\n        \n        window.localStorage.setItem('token', user.data.token);\n        window.location.reload();\n    }\n    \n    function handleChange(e){\n        if(e.target.name === 'email') {\n            setEmail(e.target.value);\n        }\n        else if(e.target.name === 'name') {\n        setUsername(e.target.value);     \n        } else if (e.target.name === 'password') {\n            setPassword(e.target.value);\n        }   \n        \n    }\n\n    if(hasAccount){\n        return (<div>\n            <LoginForm />\n            <button onClick={() => setHasAccount(false)}> Sign up </button>\n            </div>\n        )\n    }\n    \n    \n    return (<div>\n        Please register an account :\n    <form onSubmit={handleSubmit}>\n        Email:\n            <input name=\"email\" type=\"text\" value={email} onChange={handleChange} />\n        Username:\n            <input name=\"name\" type=\"text\" value={name} onChange={handleChange} />                                                \n        Password:\n            <input name=\"password\" type=\"password\" value={password} onChange={handleChange} />\n            <button type=\"submit\"> Enter </button>\n    </form>\n    <button onClick={() => setHasAccount(true)}> Already have an account ?</button>\n    </div>)\n}\n\n\nexport default SignUpForm","//When time is 4:30, sets startTime to 4:45AM and then endTime to 4:00AM, should increment endTimeHr by 1.\n\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\n\nfunction UserPage () {\n\n    //Value to disable or enable time fields\n    const [disableTime, setDisableTime] = useState(false);\n    const [description, setDescription] = useState(\"\");\n    const [startTime, setStartTime] = useState(new Date().getHours() > 12 ? new Date().getHours() - 11 : new Date().getHours()+1);    \n    const [startTimeMinutes, setStartTimeMinutes] = useState(((Math.ceil((new Date().getMinutes()*1)/15)*15)) > 59 ? ((Math.ceil((new Date().getMinutes()*1)/15)*15)) - 60 : ((Math.ceil((new Date().getMinutes()*1)/15)*15)));\n    const [endTime, setEndTime] = useState(new Date().getHours() > 12 ? new Date().getHours() - 11 : new Date().getHours()+ (new Date().getMinutes() >= 45 ? 1 : 2));\n    const [endTimeMinutes, setEndTimeMinutes] = useState((Math.ceil((new Date().getMinutes()*1)/15)*15 + 15) > 59 ? (Math.ceil((new Date().getMinutes()*1)/15)*15 + 15) - 60 : (Math.ceil((new Date().getMinutes()*1)/15)*15 + 15));\n    const [user, setUser] = useState(false)\n    const [tasks, setTasks] = useState(false)\n    const [AMorPM, setAMorPM] = useState(new Date().getHours() > 12 ? \"PM\" : \"AM\");\n    const [endAMorPM, setENDAMorPM] = useState(new Date().getHours() > 12 ? \"PM\" : \"AM\");        \n    const days = new Date();    \n    const [daysToFilter, setDaysToFilter] = useState(1);\n    const [selectedDate, setSelectedDate] = useState(new Date().getDate());\n    const [urgency, setUrgency] = useState(6);\n\n    //DEV STATE\n    const [startTimeDev, setStartTimeDev] = useState(\"\");;\n    const [endTimeDev, setEndTimeDev] = useState(\"\");\n    const [descriptionDev, setDescriptionDev] = useState(\"\");\n\n    //function to fetch tasks and set the state\n    const fetchTasks = () => {\n        axios.get(\"/api/tasks\", { headers : {\n            \"Authorization\" : `Bearer ${window.localStorage.getItem('token')}`\n        }}).then(tasks => {\n            setTasks(tasks)\n        })\n    }\n\n    useEffect(() => {\n        axios.get(\"/api/users/me\", { headers : {\n                \"Authorization\" : `Bearer ${window.localStorage.getItem('token')}`\n            }}).then(currentUser => {\n                setUser(currentUser)\n            })                        \n        fetchTasks();                    \n    }, [])\n\n    const formattedDate = (hour, minutes, day=new Date().getDay()) => {\n        \n        const today = new Date();\n\n        const fullYear = today.getFullYear();\n        const month = today.getMonth();\n        \n\n        return new Date(fullYear, month, day, hour, minutes);\n        \n    }\n    \n\n    const createTask = async (dev) => {\n\n        \n        \n        let startTimeHour = startTime;          \n        let endTimeHour = endTime;\n        let startTimeMin = startTimeMinutes;\n        let endTimeMin = endTimeMinutes;\n        let amOrPm = AMorPM;\n        let endAmOrPm = endAMorPM;\n        let myDescription = description;\n        //let myDays = days;\n        \n        \n\n        if(dev === \"dev\"){\n            const [startTimeHr, startTimeMins] = startTimeDev.slice(0, -2).split(\":\");\n            const [endTimeHr, endTimeMins] = endTimeDev.slice(0, -2).split(\":\");\n            \n            startTimeHour = startTimeHr;\n            endTimeHour = endTimeHr;\n            startTimeMin = startTimeMins;\n            endTimeMin = endTimeMins;            \n            amOrPm = startTimeDev.slice(startTimeDev.length - 2, startTimeDev.length);\n            endAmOrPm = endTimeDev.slice(endTimeDev.length - 2, endTimeDev.length);\n            myDescription = descriptionDev;\n\n        }\n        \n        \n        // console.log(startTimeMinutes, endTimeMinutes);\n\n        if(disableTime){\n            await axios.post(\"/api/tasks\", { description : myDescription }, { headers : {\n                \"Authorization\" : `Bearer ${window.localStorage.getItem('token')}`\n            }});   \n        } else {\n        //console.log(fullYear, month, day, startTimeHour = AMorPM === \"PM\" ? ((startTime*1) + 12).toString() : startTimeHour, startTimeMinutes);        \n        const startTimeDate = formattedDate(startTimeHour = amOrPm === \"PM\" ? ((startTimeHour*1) + 12).toString() : startTimeHour, startTimeMin, selectedDate);\n        //console.log(startTimeDate);\n        const endTimeDate = formattedDate(endTimeHour = endAmOrPm === \"PM\" ? ((endTimeHour*1) + 12).toString() : endTimeHour, endTimeMin, selectedDate)\n\n        await axios.post(\"/api/tasks\", { description : myDescription, startTime : startTimeDate, endTime : endTimeDate, amOrPm, endAmOrPm }, { headers : {\n            \"Authorization\" : `Bearer ${window.localStorage.getItem('token')}`\n        }});\n\n        }\n\n        \n        fetchTasks();\n        // dev === \"dev\" ? setDescriptionDev(\"\") : setDescription(\"\")\n        if(dev === \"dev\"){\n            setDescriptionDev(\"\");\n            setStartTimeDev(\"\");\n            setEndTimeDev(\"\");\n        } else {\n            setDescription(\"\");\n        }\n                \n        \n                        \n    }\n\n    const deleteTask = async (taskId) => {\n        await axios.delete(`/api/tasks/${taskId}`, { headers : {\n            \"Authorization\" : `Bearer ${window.localStorage.getItem('token')}`\n        }});\n        \n        fetchTasks();\n\n    }\n\n    //converting milliseconds to hours\n    const convertToMilliseconds = (hours) => {        \n        return hours*3600000;\n    }\n\n    //convert database task into proper format\n    const convertDate = (date, amOrPm) => {        \n        const newDate = new Date(date);\n        let hours = newDate.getHours();\n        let minutes = newDate.getMinutes();\n\n        if(minutes === 0){\n            minutes = `00`;\n        }\n        // console.log(\"convertDate\", hours, minutes);\n        if(hours > 12){\n            hours -= 12;\n        }\n            return `${hours}:${minutes}${amOrPm}`\n        \n        \n        \n    }\n\n    const buttonValidator = () => {\n        let fullStartTime = ((startTime*1) * 60) \n        let fullStartMinutes =  (startTimeMinutes*1);\n        let fullEndTime = ((endTime*1) * 60) \n        let fullEndMinutes = (endTimeMinutes*1);\n        \n        //if its PM, add total minutes, 12 hours * 60 minutes = 720 minutes\n        if(AMorPM === \"PM\"){\n            fullStartTime += 720;\n        }\n        if(endAMorPM === \"PM\"){\n            fullEndTime += 720;\n        }\n\n        \n        \n\n        const today = new Date();\n        \n\n        const fullYear = today.getFullYear();\n        const month = today.getMonth();\n        const day = selectedDate;\n\n        \n\n        //Make new date with new hour and day values\n        const currentDate = new Date();\n        //Date for startTime task\n        \n        const startTimeTaskDate = new Date(fullYear, month, day, (fullStartTime/60), fullStartMinutes); \n        //Date for endTime task\n        \n        const endTimeTaskDate = new Date(fullYear, month, day, (fullEndTime/60), fullEndMinutes);\n        \n        //console.log(Date.parse(currentDate));\n        //console.log(Date.parse(dateToCompare), \"created date\");\n        //console.log(Date.parse(currentDate) < Date.parse(dateToCompare));\n\n\n        //console.log(fullStartTime)\n        //console.log(fullEndTime, \"full end time\")\n        if((1*Date.parse(startTimeTaskDate)) > (1*Date.parse(currentDate)) && (Date.parse(startTimeTaskDate) < Date.parse(endTimeTaskDate))){                        \n            return false;\n        } \n        return true;\n    }\n\n    const pickStartTime = (e) => {\n        setStartTime(e.target.value);\n    }\n    const pickEndTime = (e) => {\n        setEndTime(e.target.value);\n    }\n    const pickStartTimeMinutes = (e) => {\n        setStartTimeMinutes(e.target.value);\n    }\n    const pickEndTimeMinutes = (e) => {\n        setEndTimeMinutes(e.target.value);\n    }\n    const pickAMorPM = (e) => {\n        setAMorPM(e.target.value);\n    }\n    const pickAMorPMEND = (e) => {\n        setENDAMorPM(e.target.value);\n    }\n\n    const enterTask = (e) => {        \n        setDescription(e.target.value);        \n    }\n\n    //DEV FUNCTIONS\n    const enterTaskDev = (e) => {\n        setDescriptionDev(e.target.value);\n    }\n    const handleEndTimeDev = (e) => {        \n        setEndTimeDev(e.target.value)        \n    }\n    const handleStartTimeDev = (e) => {\n        setStartTimeDev(e.target.value)\n    }\n\n\n    const getMonthAndDay = () => {\n        const today = new Date();\n        //set day to NEXT day incase we are on the last day of the month.                \n        return `${today.toLocaleString('default', { month: 'short' })} ${today.getDate()}`\n    }\n\n    const getMonthString = (date) => {\n    \n        const newDate = new Date(date)\n\n        // const fullYear = newDate.getFullYear();\n        // const monthValue = newDate.getMonth();\n\n        \n        return `${newDate.toLocaleString('en-us', { month: 'long' })} ${newDate.getDate()}`\n    }\n\n\n    const getMonthAndDay2 = () => {\n        const currentDay = new Date();\n        //set day to NEXT day incase we are on the last day of the month.\n        const month = currentDay.toLocaleString('default', { month: 'short' })\n\n        const nextDay = new Date();\n        nextDay.setDate(nextDay.getDate() + days.getDate());\n                \n\n        return `${month} ${currentDay.getDate()}`\n    }\n\n    const getCorrectDay = () => {\n        \n        const today = new Date();\n        today.setDate((daysToFilter*1)+days.getDate());\n\n        //setDaysToFilter(today.setDate(today.getDate() + (daysToFilter*1)));\n        return today;\n    }\n\n    //function used to get a date with 24hour value\n    const dateToCompare =  () => {\n\n        const myDate = new Date();\n\n        const year = myDate.getFullYear();\n        const month = myDate.getMonth();\n        const day = myDate.getDate() + (1*daysToFilter);\n        \n        return new Date(year, month, day, 24, 0);\n    }\n    \n    //This will sort our tasks Array for us using their starting time in milliseconds\n    let sortedTasks = tasks.data ? tasks.data.sort((a, b) => {\n        const millisecondsA = new Date(a.startTime).getTime();\n        const millisecondsB = new Date(b.startTime).getTime();        \n\n        return millisecondsA - millisecondsB\n    }).filter(task =>  (Date.parse(new Date(task.startTime)) < Date.parse(dateToCompare()) || !task.startTime)) : [];\n    \n    //console.log(daysToFilter);\n    //console.log(sortedTasks);\n\n    //find the amount of days in current month to map over.\n    const amountOfDays = () => {\n        const today = new Date();\n\n        const anotherDay = new Date();\n\n        const month = today.getMonth() + 1;\n        const year = today.getFullYear();\n\n        return new Date(year, month, 0).getDate() - anotherDay.getDate();\n    }\n\n\n    //console.log(user);\n    //console.log(tasks);\n    // console.log(startTime);\n    // console.log(startTimeMinutes);\n    // console.log(endTime);\n    // console.log(endTimeMinutes);\n    // console.log(AMorPM);\n    //console.log(startTimeDev);\n    // console.log(urgency);\n    \n    \n\n    return (\n        <div>\n            Hey <strong>{user.data ? user.data.name : \"guest\"}!</strong> \n            <p> Date today : <strong> {getMonthAndDay()}</strong> </p>\n            <br />\n            <p> Tasks for the next <input value={Number(daysToFilter).toString()} onChange={(e) => setDaysToFilter(e.target.value)} type=\"number\" style={{ fontSize:\"20px\", textAlign:\"center\", width: \"50px\", height:\"25px\"}} /> days </p>                       \n            <p> Urgency(hours) <input value={Number(urgency).toString()} onChange={(e) => setUrgency(e.target.value*1)} type=\"number\" style={{ fontSize:\"20px\", textAlign:\"center\", width: \"50px\", height:\"25px\"}} /> </p>\n            <h2> Your Tasks from {getMonthAndDay2()} {daysToFilter > 0 ? `to ${getCorrectDay().toLocaleString('default', { month: 'short' })} ${getCorrectDay().getDate()}` : \"\" }</h2>                                    \n            {sortedTasks ? sortedTasks.length === 0 ? \"No Tasks\" : sortedTasks.map(task => {\n                return <div key={task._id}>\n                {task.startTime && task.endTime ?\n                    <div> {getMonthString(task.startTime)} - <strong> {convertDate(task.startTime, task.amOrPm)} - {convertDate(task.endTime, task.endAmOrPm)} </strong> </div>\n                    :\n                    null }\n                <li style={{ color: Date.parse(task.startTime) - Date.now() < convertToMilliseconds(urgency) ? \"red\" : \"\", marginBottom:\"15px\" }}>{task.description}\n                <button style={{marginLeft:\"10px\"}} onClick={() => deleteTask(task._id)}> x </button>\n                <br />                \n                </li> \n                </div>                               \n            }) : null}\n            <h2> Create your task below ! </h2>\n            <h6> Note : If left blank, month or day is the value of month and day today </h6>\n            {/* <p> Enter date for new task <input type=\"number\" style={{ marginRight:\"20px\", width: \"50px\", height:\"30px\"}} /> </p> */}\n            \n            <p> Click date for new task </p>\n            <p style={{ fontWeight:\"bold\", color:\"limegreen\" }}> {selectedDate} </p>\n            <div style={{ width: \"35%\" }}>              \n            <button onClick={()=>setSelectedDate(new Date().getDate())} style={{width:\"30px\", height:\"30px\"}}> {new Date().getDate()} </button>\n                {Array.from(Array(amountOfDays()).keys()).map(day => {\n                    return (\n                        <button key={day} onClick={()=>setSelectedDate(day+1+(new Date().getDate()))} style={{width:\"30px\", height:\"30px\"}}> {day+1+(new Date().getDate())} </button>\n                    )\n                })}\n            </div>\n            <h4> Description </h4>\n            <textarea style={{ height:`${20+description.length}px`, width:\"150px\"}} value={description} onChange={enterTask} />\n\n            {/* <h4> Start time </h4>\n            <input type=\"text\" name=\"startTime\" value={startTime} onChange={enterTask} /> */}            \n            <h3> Time </h3>\n            <button onClick={() => setDisableTime(!disableTime)} style={{ backgroundColor: disableTime ? \"limegreen\" : \"crimson\", marginLeft:\"10px\", fontWeight:\"bold\" }}> { disableTime ? \"select time\" : \"omit time\" } </button>\n            {disableTime ? \"\" : <div>             \n            <label>                \n          Pick your start time \n          <select disabled={disableTime} style={{ marginLeft:\"5px\", marginTop:\"10px\" }} value={startTime} onChange={pickStartTime}>            \n            {Array.from(Array(12).keys()).map(hour => {\n                return (\n                    <option key={hour} value={hour+1}> {hour+1} </option>\n                )\n            })}\n          </select>\n          <select disabled={disableTime} value={startTimeMinutes} onChange={pickStartTimeMinutes}>\n                <option value={0}> 00 </option>            \n            {Array.from(Array(3).keys()).map(minutes => {\n                return (\n                    <option key={minutes} value={(minutes+1)*15}> {(minutes+1) * 15} </option>\n                )\n            })}                    \n          </select>\n        </label>\n        <select disabled={disableTime} value={AMorPM} onChange={pickAMorPM}>\n            <option  value=\"AM\"> AM </option>\n            <option  value=\"PM\"> PM </option>\n        </select>                \n        <label>\n                <br />\n          Pick your end time \n          <select disabled={disableTime} style={{ marginLeft:\"9px\", marginTop:\"10px\" }} value={endTime} onChange={pickEndTime}>            \n            {Array.from(Array(12).keys()).map(hour => {\n                return (\n                    <option key={hour} value={hour+1}> {hour+1} </option>\n                )\n            })}\n          </select>\n          <select disabled={disableTime} value={endTimeMinutes} onChange={pickEndTimeMinutes}>\n          <option value={0}> 00 </option>            \n            {Array.from(Array(3).keys()).map(minutes => {\n                return (\n                    <option key={minutes} value={(minutes+1)*15}> {(minutes+1) * 15} </option>\n                )\n            })}            \n          </select>\n        </label>\n        <select disabled={disableTime} value={endAMorPM} onChange={pickAMorPMEND}>\n            <option  value=\"AM\"> AM </option>\n            <option  value=\"PM\"> PM </option>\n        </select>        \n        </div> }\n        <br />\n        <br />\n        { buttonValidator() ? <p style={{ color: \"red\" }}> PLEASE SELECT AN APPROPRIATE TIMING / DATE! </p> : null}\n            <button disabled={buttonValidator()} style={{ marginTop:\"10px\"}} onClick={createTask}> Create task </button>            \n            \n        <h2> Create task as Dev </h2>\n        <h4> Description </h4>        \n        <textarea style={{ height:`${20+descriptionDev.length}px`, width:\"150px\"}} value={descriptionDev} onChange={enterTaskDev} />\n        <br />\n        <p>Enter your start time and end time in proper format. (example: 1:15AM to 1:30AM)</p>\n        <input value={startTimeDev} onChange={handleStartTimeDev} type=\"text\" style={{ marginRight:\"20px\", width: \"50px\", height:\"30px\"}} />\n        to\n        <input value={endTimeDev} onChange={handleEndTimeDev} type=\"text\" style={{ marginLeft:\"20px\", width: \"50px\", height:\"30px\"}} />                    \n        <br/>\n        <button style={{ marginTop:\"10px\"}} onClick={() => createTask(\"dev\")}> Create task dev </button>\n\n\n        </div>\n    )\n}\n\nexport default UserPage","\nimport SignUpForm from './SignUpForm';\nimport UserPage from './UserPage';\n//import LoginForm from './LoginForm'\nimport { useState } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n  \n  const [isLoggedIn, setLoginStatus] = useState(window.localStorage.getItem('token'))\n  \n  \n\n  async function logout(){    \n    window.localStorage.removeItem('token');\n    console.log(window.localStorage.getItem('token'))\n    setLoginStatus(false);    \n  }\n  \n  \n\n  // if(hasAccount){\n  //   return (\n  //     <LoginForm />\n  //   )\n  // }\n\n\n  return (\n    <div style={{ marginLeft:\"50px\" }}className=\"App\">      \n    { isLoggedIn ? <button style={{ marginLeft:\"50%\", color:\"red\", marginTop:\"10px\", width:\"100px\", height:\"30px\"}} onClick={logout}> Logout </button> : null }\n      { isLoggedIn ? <UserPage /> : <SignUpForm /> }      \n      {/* { !isLoggedIn ? <button onClick={() => setHasAccount(true)}> Already have an account ?</button> : null} */}      \n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}